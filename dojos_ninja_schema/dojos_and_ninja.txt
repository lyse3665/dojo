-- Forward engineer the dojos_and_ninjas_schema from the previous chapter

-- Create a .txt file where you'll save each of your queries from below

-- Query: Create 3 new dojos

INSERT INTO dojos (name)
VALUES ("Chicago"),("Seattle"),("Online");

-- Query: Delete the 3 dojos you just created

SET SQL_SAFE_UPDATES = 0;
DELETE FROM dojos;
-- Query: Create 3 more dojos
INSERT INTO dojos (name)
VALUES ("Indiana"),("Texas"),("Arizona");

-- Query: Create 3 ninjas that belong to the first dojo
-- Query: Create 3 ninjas that belong to the second dojo
-- Query: Create 3 ninjas that belong to the third dojo
-- Query: Retrieve all the ninjas from the first dojo
-- Query: Retrieve all the ninjas from the last dojo

-- Query: Retrieve the last ninja's dojo

INSERT INTO ninjas (first_name, last_name, age, dojo_id)
VALUES ("Sandra","kiss", 39,4),("Furaha","Ezekiel", 34,4),("Chemsa","Bukuru",28,4),
		("Lydia","kis", 35,5),("Julie","Fathili", 36,5),("Mitterrand","Kishole",29,5),
        ("Lutu","Rutunganya", 64,6),("Mudulo","Abdul", 54,6),("Kiza","Duzaire",50,6);


-- Query: Use a JOIN to retrieve the ninja with id 6 as well as the
-- data from its dojo. Be sure to do this in one query using a join statement.

SELECT * FROM dojos
LEFT JOIN ninjas ON dojos.id = ninjas.dojo_id
WHERE dojos.id = 4;

-- Query: Use a JOIN to retrieve all the ninjas as well as that ninja's dojo, note, you will 
-- see repeated data on dojos as a dojo can have many ninjas!
SELECT * FROM dojos
LEFT JOIN ninjas ON dojos.id = ninjas.dojo_id
WHERE dojos.id = (SELECT dojo_id FROM ninjas ORDER BY dojo_id DESC LIMIT 1);

SELECT * FROM dojos
WHERE dojos.id = (SELECT dojo_id FROM ninjas ORDER BY dojo_id DESC LIMIT  1);